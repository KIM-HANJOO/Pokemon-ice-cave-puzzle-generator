cpu에는 속도를 빠르게 하는 온갖 트릭들이 다 있는데, 여기에 레지스터도 있고 branch(if, for문이 true인지 예측하는 판독기), 코어 - 연산자들 등등이 다 있음.

또 한켠에는 non-volatile 메모리인 하드디스크같은 게 있고, volatile 메모리인 ram이 있고, 등등.

하드디스크에서 파일을 불러오면 ram으로 불러와지고, random acess memory니까 주소만 알고 있다면 접근하는 속도는 어떤 지점이든 동일함. 프로그램을 켜면 이 램에 프로그램이 올라가고, 무슨 동작을 하면(프로그래밍을 한다고 하면) 램의 지정된 주소에서부터 쭉 읽어내려가면서 필요한 변수들을 레지스터에 저장하고, 또 레지스터에 있는 값들을 연산하는 등의 행동을 함.

레지스터는 x86의 경우(인텔) 총 10개가 있음. 이름도 eax, eai등등 있음. c가 살아남으면서 x86도 같이 살아남았는데, 레지스터의 구조가 바뀌면 과거의 프로그램들을 동작하기 어려우니 레지스터에 대한 메뉴얼을 만들어놨음. 레지스터는 점점 괴물이 됐고, 이걸 애플이 arm으로 깨버림. arm은 맥에서 만든 cpu인데 모바일에서 주로 구동이 되었었고, 32개의 레지스터가 있는데 이름이 r0부터 r31까지. 여기에 추가 별명이 있는 경우가 있음. 연산이 단순하고, branch도 잘 만들었고 등등의 좋은 이유로 현재 대박이 난거임.




--

매트랩 - 행렬 = 변수, 함수, for-loop, if-loop, while-loop, 
파이썬 - 함수 정의, 변수, for, if, while, 어레이, (클래스)

c, c++, 변수, 함수 for, if, while, 구조체(x, y), ++클래스

C  C++ C# / 파이썬 자바 매트랩	->	어셈블리어





컴파일 과정에서
어셈블리어 구동